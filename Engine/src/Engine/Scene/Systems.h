#pragma once

#include <glm/glm.hpp>
#include <entt.hpp>

#include "Engine/Core/Base.h"
#include "Engine/Core/Timestep.h"
#include "Engine/Renderer/Camera.h"

#include "Engine/Scene/Components.h"

namespace Engine::System {


	glm::mat4 GetTransform(entt::registry& registry, const entt::entity& entity);

	///////////////////////////////////////////////////////////////////////////////////////////////
	// Renderer ///////////////////////////////////////////////////////////////////////////////////

	namespace Renderer {
		void Submit(entt::registry& registry);
	}

	///////////////////////////////////////////////////////////////////////////////////////////////
	// CharacterController ////////////////////////////////////////////////////////////////////////

	namespace CharacterController {
		void OnUpdate(entt::registry& registry, Timestep ts);
		void Activate(entt::registry& registry, entt::entity controller);
	}

	///////////////////////////////////////////////////////////////////////////////////////////////
	// Camera /////////////////////////////////////////////////////////////////////////////////////

	namespace Camera {
		Engine::Camera GetCamera(entt::registry& registry);
		Engine::Camera GetCamera(entt::registry& registry, entt::entity camera);

		void SetViewportSize(entt::registry& registry, uint32_t width, uint32_t height);
		void SetViewportSize(entt::registry& registry, entt::entity entity, uint32_t width, uint32_t height);
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////
	// Hero ///////////////////////////////////////////////////////////////////////////////////////

	namespace Hero {

	}

}
